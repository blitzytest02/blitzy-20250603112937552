# Development Dependencies for Python Flask Hello World Tutorial
# This file contains testing framework, code quality tools, and development utilities
# for comprehensive Flask application development and testing workflows.
# 
# Install with: pip install -r requirements-dev.txt
# This automatically includes production dependencies from requirements.txt

# Include production dependencies
-r requirements.txt

# ============================================================================
# TESTING FRAMEWORK ECOSYSTEM (Section 3.2.2)
# ============================================================================

# Primary testing framework replacing Jest v29.7.0
pytest>=8.4.0

# Flask-specific testing integration with test client fixtures
pytest-flask>=1.3.0

# Code coverage measurement and reporting (replaces Jest built-in coverage)
coverage>=7.6.0
pytest-cov>=5.0.0

# Parallel test execution for performance optimization
pytest-xdist>=3.5.0

# Enhanced HTML test reporting for CI/CD integration
pytest-html>=4.1.1

# Mock and testing utilities
pytest-mock>=3.12.0

# ============================================================================
# PERFORMANCE TESTING AND MONITORING (Section 6.6.11)
# ============================================================================

# Performance testing framework for Flask endpoints
pytest-benchmark>=4.0.0

# System resource monitoring for memory usage tracking (<75MB limit)
psutil>=5.9.6

# ============================================================================
# CODE QUALITY AND FORMATTING (Section 3.3.2)
# ============================================================================

# Uncompromising Python code formatter (replaces ESLint formatting)
black>=24.0.0

# Python linting tool combining pycodestyle, pyflakes, and McCabe
flake8>=7.0.0

# Security-focused linting plugin for flake8
flake8-security>=1.7.1

# Optional static type checker for enhanced IDE support
mypy>=1.8.0

# Import statement sorting and organization
isort>=5.13.2

# ============================================================================
# SECURITY TESTING TOOLS (Section 6.6.9)
# ============================================================================

# Python security vulnerability scanner for static code analysis
bandit>=1.7.5

# Dependency vulnerability scanning (alternative to pip-audit)
safety>=3.0.1

# ============================================================================
# DEVELOPMENT UTILITIES (Section 3.3.2)
# ============================================================================

# Cross-platform file system event monitoring for auto-reload
watchdog>=3.0.0

# Built-package format for faster installation and distribution
wheel>=0.42.0

# Multipart form data parsing for comprehensive Flask testing
python-multipart>=0.0.6

# Python environment variable management for testing
python-dotenv>=1.0.1

# ============================================================================
# DOCUMENTATION AND REPORTING
# ============================================================================

# Sphinx documentation generation (optional)
sphinx>=7.2.6

# Jupyter notebook support for interactive development (optional)
jupyter>=1.0.0

# ============================================================================
# VERSION CONSTRAINTS AND COMPATIBILITY
# ============================================================================

# Ensure Python 3.12+ compatibility across all dependencies
# All version specifications use >= to allow compatible minor/patch updates
# while maintaining stability through semantic versioning

# Flask application testing requires:
# - pytest ecosystem for comprehensive test execution and fixture management
# - Coverage reporting with 100% enforcement as mandated in Section 6.6.4.1
# - Performance monitoring to meet <50ms warm request and <75MB memory SLAs
# - Security scanning integration for CI/CD pipeline quality gates
# - Code quality tools for PEP 8 compliance and consistent formatting
# - Development utilities for efficient Flask application development workflow